{"version":3,"sources":["Skills/Skills.module.css","Main/Main.module.css","Header/Header.module.css","Header/NawMenu/NawMenu.module.css","Projects/Projects.module.css","Slogan/Slogan.module.css","Contacts/Contacts.module.css","Footer/Footer.module.css","logo.svg","Header/NawMenu/NawMenu.js","Header/Header.js","Main/Main.js","Skills/Skills.js","Projects/Projects.js","Slogan/Slogan.js","Contacts/Contacts.js","Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonOfMenu","props","href","className","styles","link","name","NawMenu","navMenu","Header","header","container","Main","main","greeting","photo","src","alt","Skill","skill","Skills","skills","blockSkills","Projects","projects","Slogan","slogan","Contacts","contacts","Footer","footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,OAAS,uBAAuB,MAAQ,sBAAsB,YAAc,4BAA4B,MAAQ,wB,gBCAxMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,SAAW,uBAAuB,MAAQ,sB,gBCA1HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,IAAM,sB,gBCA9FD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,uECD3BD,EAAOC,QAAU,IAA0B,kC,8ICG3C,SAASC,EAAcC,GACnB,OAAS,uBAAGC,KAAK,GAAGC,UAAWC,IAAOC,MAAOJ,EAAMK,MAgBxCC,MAbf,WACI,OACY,yBAAKJ,UAAWC,IAAOI,SACnB,kBAACR,EAAD,CAAcM,KAAK,+CACnB,kBAACN,EAAD,CAAcM,KAAK,yCACnB,kBAACN,EAAD,CAAcM,KAAK,+CACnB,kBAACN,EAAD,CAAcM,KAAK,uDCGxBG,MAXf,WACI,OACI,yBAAKN,UAAWC,IAAOM,QACnB,yBAAKP,UAAWC,IAAOO,WACnB,kBAAC,EAAD,S,gBCaDC,MAlBf,WACE,OACG,yBAAKT,UAAWC,IAAOS,MACxB,yBAAKV,UAAWC,IAAOO,WACnB,yBAAKR,UAAWC,IAAOU,UACnB,qCACA,kDACA,0DAEJ,yBAAKX,UAAWC,IAAOW,OACtB,yBAAKC,IAAI,GAAGC,IAAI,S,gBCXzB,SAASC,EAAMjB,GACX,OAAO,yBAAKE,UAAWC,IAAOe,OAC1B,yBAAKhB,UAAWC,IAAOW,OACnB,yBAAKC,IAAI,MAEb,qHACA,8KAwBOI,MAlBf,WACI,OACI,yBAAKjB,UAAWC,IAAOiB,QACnB,yBAAKlB,UAAWC,IAAOO,WACnB,yBAAKR,UAAWC,IAAOM,QACnB,wFAEJ,yBAAKP,UAAWC,IAAOkB,aACnB,kBAACJ,EAAD,MACA,kBAACA,EAAD,MACA,kBAACA,EAAD,U,gBCZLK,MATf,WACE,OACG,yBAAKpB,UAAWC,IAAOoB,Y,gBCObC,MATf,WACE,OACG,yBAAKtB,UAAWC,IAAOsB,U,gBCObC,MATf,WACE,OACG,yBAAKxB,UAAWC,IAAOwB,Y,iBCObC,MATf,WACE,OACG,yBAAK1B,UAAWC,IAAO0B,UCqBbC,MAhBf,WACI,OACI,yBAAK5B,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTI6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.355e7fc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skills\":\"Skills_skills__2ru8L\",\"container\":\"Skills_container__3V-hr\",\"header\":\"Skills_header__3ukKx\",\"photo\":\"Skills_photo__3nEOI\",\"blockSkills\":\"Skills_blockSkills__1IwXh\",\"skill\":\"Skills_skill__3vsFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3p1EJ\",\"container\":\"Main_container__1Px-q\",\"greeting\":\"Main_greeting__32QaS\",\"photo\":\"Main_photo__1QzDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1SIww\",\"container\":\"Header_container__11F6j\",\"nav\":\"Header_nav__2tKRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navMenu\":\"NawMenu_navMenu__Kdxz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"Projects_projects__2vNn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slogan\":\"Slogan_slogan__3Ys7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__2THLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2oR1N\"};","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport styles from './NawMenu.module.css';\n\nfunction ButtonOfMenu (props) {\n    return   <a href=\"\" className={styles.link}>{props.name}</a>\n}\n\nfunction NawMenu() {\n    return (\n                <div className={styles.navMenu}>\n                    <ButtonOfMenu name=\"Главная\" />\n                    <ButtonOfMenu name=\"Скиллы\" />\n                    <ButtonOfMenu name=\"Проекты\" />\n                    <ButtonOfMenu name=\"Контакты\" />\n                </div>\n\n\n    );\n}\n\nexport default NawMenu;\n","import React from 'react';\nimport styles from './Header.module.css';\nimport NawMenu from \"./NawMenu/NawMenu\";\n\n\nfunction Header() {\n    return (\n        <div className={styles.header}>\n            <div className={styles.container}>\n                <NawMenu/>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport styles from './Main.module.css';\n\n\nfunction Main() {\n  return (\n     <div className={styles.main}>\n    <div className={styles.container}>\n        <div className={styles.greeting}>\n            <span>Hi!</span>\n            <span>My name is Nikky</span>\n            <span>I'm front-end developer</span>\n        </div>\n        <div className={styles.photo}>\n         <img src=\"\" alt=\"\" />\n        </div>\n    </div>\n     </div>\n\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport styles from './Skills.module.css';\n\nfunction Skill(props) {\n    return <div className={styles.skill}>\n        <div className={styles.photo}>\n            <img src=\"\"/>\n        </div>\n        <h2>Название навыка</h2>\n        <div>\n            Подробное описание навыка\n        </div>\n    </div>\n}\n\nfunction Skills() {\n    return (\n        <div className={styles.skills}>\n            <div className={styles.container}>\n                <div className={styles.header}>\n                    <h2>Мои скиллы</h2>\n                </div>\n                <div className={styles.blockSkills}>\n                    <Skill/>\n                    <Skill/>\n                    <Skill/>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Skills;\n","import React from 'react';\nimport styles from './Projects.module.css';\n\n\nfunction Projects() {\n  return (\n     <div className={styles.projects}>\n\n     </div>\n\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport styles from './Slogan.module.css';\n\n\nfunction Slogan() {\n  return (\n     <div className={styles.slogan}>\n\n     </div>\n\n  );\n}\n\nexport default Slogan;\n","import React from 'react';\nimport styles from './Contacts.module.css';\n\n\nfunction Contacts() {\n  return (\n     <div className={styles.contacts}>\n\n     </div>\n\n  );\n}\n\nexport default Contacts;\n","import React from 'react';\nimport styles from './Footer.module.css';\n\n\nfunction Footer() {\n  return (\n     <div className={styles.footer}>\n\n     </div>\n\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Skills from \"./Skills/Skills\";\nimport Projects from \"./Projects/Projects\";\nimport Slogan from \"./Slogan/Slogan\";\nimport Contacts from \"./Contacts/Contacts\";\nimport Footer from \"./Footer/Footer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"portfolio\">\n                <Header/>\n                <Main/>\n                <Skills/>\n                <Projects/>\n                <Slogan/>\n                <Contacts/>\n                <Footer/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}